function [min]=p3_5p(M,m,fgt)
%%                      data  input
% fgt=1.5;
%     M =  [ -3.33639834336120 -23.35549638285873 -13.18941519576778  6.43164913914748 
%             0.65948286155096  -4.90376715918747   1.17103701629876  0.14580433383203
%            -8.46658219501120  -3.99876939947909  -3.02248927651177  -22.16086539862748];
% 
%     m = [ 0.11009888473695   0.39776592879400   0.28752996253253   -0.05017617729940
%           0.03882059658299  -0.17303453640632  -0.05791310109713    0.19297848817239];
%       
% if 0
%     
%     % planar
%     M = [ -4.16909046323065 -21.76924382754407 -11.28160103570576  -18.70673643641682
%            8.76573361388879   2.54916911753407 -15.64179144355760   -7.12884738225938
%                           0                  0                  0                   0];
%           
%     m =  [ -0.01685480263817  -0.30156127000652  -0.11261034380081    -0.25658711285962
%            -0.05066846248374   0.01061608945225   0.17825476446826     0.09480347286640];
% end
%       
%%                    normalize 2D, 3D
%     
% % shift 3D data so that variance = sqrt(2), mean = 0
%     mean3d = (sum(M,2) / 4);
%     M = M - repmat(mean3d, 1, 4);
% 
% % variance (isotropic)
%     var = (sum( sqrt(sum( M.^2 ) ) ) / 4);
%     M = (1/var)*M;
% 
%  % scale 2D data
%     var2d = (sum( sqrt(sum( m.^2 ) ) ) / 4);
%     m = (1/var2d)*m;
%     
 %%                     cal cofis
 
 x1=m(1,1);x2=m(1,2);x3=m(1,3);x4=m(1,4);
 y1=m(2,1);y2=m(2,2);y3=m(2,3);y4=m(2,4);
 X1=M(1,1);X2=M(1,2);X3=M(1,3);X4=M(1,4);
 Y1=M(2,1);Y2=M(2,2);Y3=M(2,3);Y4=M(2,4);
 Z1=M(3,1);Z2=M(3,2);Z3=M(3,3);Z4=M(3,4);
 
x12=x1-x2;x13=x1-x3;x14=x1-x4;
x21=x2-x1;x23=x2-x3;x24=x2-x4;
x31=x3-x1;x32=x3-x2;x34=x3-x4;
x41=x4-x1;x42=x4-x2;x43=x4-x3;

y12=y1-y2;y13=y1-y3;y14=y1-y4;
y21=y2-y1;y23=y2-y3;y24=y2-y4;
y31=y3-y1;y32=y3-y2;y34=y3-y4;
y41=y4-y1;y42=y4-y2;y43=y4-y3;

X12=X1-X2;X13=X1-X3;X14=X1-X4;
X21=X2-X1;X23=X2-X3;X24=X2-X4;
X31=X3-X1;X32=X3-X2;X34=X3-X4;
X41=X4-X1;X42=X4-X2;X43=X4-X3;

Y12=Y1-Y2;Y13=Y1-Y3;Y14=Y1-Y4;
Y21=Y2-Y1;Y23=Y2-Y3;Y24=Y2-Y4;
Y31=Y3-Y1;Y32=Y3-Y2;Y34=Y3-Y4;
Y41=Y4-Y1;Y42=Y4-Y2;Y43=Y4-Y3;

Z12=Z1-Z2;Z13=Z1-Z3;Z14=Z1-Z4;
Z21=Z2-Z1;Z23=Z2-Z3;Z24=Z2-Z4;
Z31=Z3-Z1;Z32=Z3-Z2;Z34=Z3-Z4;
Z41=Z4-Z1;Z42=Z4-Z2;Z43=Z4-Z3;

a0=(y13*X21+x12*Y31);a1=-(y13*X21+x12*Y31);a2=2*y13*Y21-2*x12*X31;a3=2*x12*Z31;a4=2*y13*Z21;a5=y13*X21-x12*Y31;
a6=(y13*Y21-x12*X31);a7=-(y13*Y21-x12*X31);a8=-(2*y13*X21+2*x12*Y31);a9=2*y13*Z21;a10=-2*x12*Z31;a11=-y13*Y21-x12*X31;
a12=(y13*x2*Z21-x12*y3*Z31);a13=(y13*x2*Z21-x12*y3*Z31);a14=0;a15=-2*(y13*x2*Y21-x12*y3*Y31);a16=2*(y13*x2*X21-x12*y3*X31);a17=-y13*x2*Z21+x12*y3*Z31;

b0=(y12*X31+x13*Y21);b1=-(y12*X31+x13*Y21);b2=(2*y12*Y31-2*x13*X21);b3=2*x13*Z21;b4=2*y12*Z31;b5=y12*X31-x13*Y21;
b6=(y12*Y31-x13*X21);b7=-(y12*Y31-x13*X21);b8=-(2*y12*X31+2*x13*Y21);b9=2*y12*Z31;b10=-2*x13*Z21;b11=-y12*Y31-x13*X21;
b12=(y12*x3*Z31-x13*y2*Z21);b13=(y12*x3*Z31-x13*y2*Z21);b14=0;b15=-2*(y12*x3*Y31-x13*y2*Y21);b16=2*(y12*x3*X31-x13*y2*X21);b17=-y12*x3*Z31+x13*y2*Z21;

c0=(y23*X42+x24*Y32);c1=-(y23*X42+x24*Y32);c2=(2*y23*Y42-2*x24*X32);c3=2*x24*Z32;c4=2*y23*Z42;c5=y23*X42-x24*Y32;
c6=(y23*Y42-x24*X32);c7=-(y23*Y42-x24*X32);c8=-(2*y23*X42+2*x24*Y32);c9=2*y23*Z42;c10=-2*x24*Z32;c11=-y23*Y42-x24*X32;
c12=(y23*x4*Z42-x24*y3*Z32);c13=(y23*x4*Z42-x24*y3*Z32);c14=0;c15=-2*(y23*x4*Y42-x24*y3*Y32);c16=2*(y23*x4*X42-x24*y3*X32);c17=-y23*x4*Z42+x24*y3*Z32;

d0= (y32*X43+x34*Y23);d1=-(y32*X43+x34*Y23);d2=(2*y32*Y43-2*x34*X23);d3=2*x34*Z23;d4=2*y32*Z43;d5=y32*X43-x34*Y23;
d6=(y32*Y43-x34*X23);d7=-(y32*Y43-x34*X23);d8=-(2*y32*X43+2*x34*Y23);d9=2*y32*Z43;d10=-2*x34*Z23;d11=-y32*Y43-x34*X23;
d12=(y32*x4*Z43-x34*y2*Z23);d13=(y32*x4*Z43-x34*y2*Z23);d14=0;d15=-2*(y32*x4*Y43-x34*y2*Y23);d16=2*(y32*x4*X43-x34*y2*X23);d17=-y32*x4*Z43+x34*y2*Z23;



%%                     solve equations

syms x y
eu=[a0*x^2+a1*y^2+a2*x*y+a3*x+a4*y+a5,a6*x^2+a7*y^2+a8*x*y+a9*x+a10*y+a11,a12*x^2+a13*y^2+a15*x+a16*y+a17;
    b0*x^2+b1*y^2+b2*x*y+b3*x+b4*y+b5,b6*x^2+b7*y^2+b8*x*y+b9*x+b10*y+b11,b12*x^2+b13*y^2+b15*x+b16*y+b17;
    c0*x^2+c1*y^2+c2*x*y+c3*x+c4*y+c5,c6*x^2+c7*y^2+c8*x*y+c9*x+c10*y+c11,c12*x^2+c13*y^2+c15*x+c16*y+c17;
    d0*x^2+d1*y^2+d2*x*y+d3*x+d4*y+d5,d6*x^2+d7*y^2+d8*x*y+d9*x+d10*y+d11,d12*x^2+d13*y^2+d15*x+d16*y+d17;];
    
A=det(eu([1,2,3],:));
B=det(eu([1,2,4],:));
C=det(eu([1,3,4],:));
D=det(eu([2,3,4],:));

tic
[x,y]=solve(A,B,C,D);
fprintf('---------code result----------\n');
%[x, y] = t68(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17);
toc


%%                     select solutions
F11=[a0,a1,a2,a3,a4,a5];
F12=[a6,a7,a8,a9,a10,a11];
F13=[a12,a13,a14,a15,a16,a17];
F21=[b0,b1,b2,b3,b4,b5];
F22=[b6,b7,b8,b9,b10,b11];
F23=[b12,b13,b14,b15,b16,b17];
F31=[c0,c1,c2,c3,c4,c5];
F32=[c6,c7,c8,c9,c10,c11];
F33=[c12,c13,c14,c15,c16,c17];
F41=[d0,d1,d2,d3,d4,d5];
F42=[d6,d7,d8,d9,d10,d11];
F43=[d12,d13,d14,d15,d16,d17];

n=length(x);
idx=[];
    min=9999;
%fprintf('时间花费了%d秒\n',time);
for i=1:n
    p=[x(i)*x(i),y(i)*y(i),x(i)*y(i),x(i),y(i),1]';
    f=zeros(4,3);
    f(1,1)=F11*p;
    f(1,2)=F12*p;
    f(1,3)=F13*p;
    f(2,1)=F21*p;
    f(2,2)=F22*p;
    f(2,3)=F23*p;
    f(3,1)=F31*p;
    f(3,2)=F32*p;
    f(3,3)=F33*p;
    f(4,1)=F41*p;
    f(4,2)=F42*p;
    f(4,3)=F43*p;
%     anss=[det(f([1,2,3],:))
%          det(f([1,2,4],:))
%          det(f([1,4,3],:))
%          det(f([4,2,3],:))]
%     abs(det(f([1,2,3],:)))+abs(det(f([1,2,4],:)))+abs(det(f([1,4,3],:)))+abs(det(f([4,2,3],:)));
    %rank(f)
    [u,d,v]=svd(f);
    k=u(:,1:2)*d(1:2,1:2)*v(:,1:2)';
    kk=null(k);
    kk=kk*(1/kk(3));
    fc=kk(1);fs=kk(2);
    ff=sqrt(kk(1)^2+kk(2)^2);
    if not(imag(ff))&&abs(ff-fgt)<fgt
        ff;
        fc;
        fs;
        R_p=[1+x(i)*x(i)-y(i)*y(i),           2*x(i)*y(i),                  2*y(i);
                       2*x(i)*y(i), y(i)*y(i)-x(i)*x(i)+1,                 -2*x(i);
                           -2*y(i),                2*x(i),   1-x(i)*x(i)-y(i)*y(i);   ];
        K=[ff,0,0;
            0,ff,0;
            0,0,1;];
        K_theta=[fc,-fs,0;
                 fs,fc,0;
                 0,0,1;];
        
        R_theta=K\K_theta;
        R=R_theta*R_p;
        P=K_theta*R_p;
                       
        lamda_1=(fc*R_p(1,:)-fs*R_p(2,:)-x2*R_p(3,:))*[X21;Y21;Z21]/x12;
        T=lamda_1*[x1,y1,1]'-P*[X1,Y1,Z1]';
        P(:,4)=T;
        P*[X1,Y1,Z1,1]';
        %fprintf('focal:%d   focal error:%d\n',ff,(ff-fgt));
        if abs(ff-fgt)/fgt<min 
            min=abs(ff-fgt)/fgt;
        end
    end
        
    
end


